<?php
/**
 * @link http://www.tintsoft.com/
 * @copyright Copyright (c) 2012 TintSoft Technology Co. Ltd.
 * @license http://www.tintsoft.com/license/
 */

namespace xutl\payment;

use Yii;
use yii\base\Component;
use yii\base\Model;
use yii\httpclient\Client;

/**
 * 网关基类
 * @package xutl\payment
 */
class Gateway extends Model implements GatewayInterface
{
    /**
     * @var Client
     */
    public $_httpClient;

    /**
     * 获取Http Client
     * @return Client
     */
    public function getHttpClient()
    {
        if (!is_object($this->_httpClient)) {
            $this->_httpClient = new Client();
        }
        return $this->_httpClient;
    }

    /**
     * 定义场景
     */
    public function scenarios()
    {
        $scenarios = parent::scenarios();
        return ArrayHelper::merge($scenarios, [
            'payment' => ['username', 'email', 'password'],
            'refund' => ['username', 'email'],
            'close' => ['username', 'email', 'password'],
            'find' => ['username', 'email', 'password'],
        ]);
    }

    public function rules()
    {
        return parent::rules(); // TODO: Change the autogenerated stub
    }



    public function payment()
    {

    }

    public function refund($outTradeNo)
    {

    }

    public function close($outTradeNo)
    {

    }

    public function find($outTradeNo)
    {

    }

    /**
     * Sets persistent state.
     * @param string $key state key.
     * @param mixed $value state value
     * @return $this the object itself
     */
    protected function setState($key, $value)
    {
        if (!Yii::$app->has('session')) {
            return $this;
        }
        /* @var \yii\web\Session $session */
        $session = Yii::$app->get('session');
        $key = $this->getStateKeyPrefix() . $key;
        $session->set($key, $value);
        return $this;
    }

    /**
     * Returns persistent state value.
     * @param string $key state key.
     * @return mixed state value.
     */
    protected function getState($key)
    {
        if (!Yii::$app->has('session')) {
            return null;
        }
        /* @var \yii\web\Session $session */
        $session = Yii::$app->get('session');
        $key = $this->getStateKeyPrefix() . $key;
        $value = $session->get($key);
        return $value;
    }

    /**
     * Removes persistent state value.
     * @param string $key state key.
     * @return boolean success.
     */
    protected function removeState($key)
    {
        if (!Yii::$app->has('session')) {
            return true;
        }
        /* @var \yii\web\Session $session */
        $session = Yii::$app->get('session');
        $key = $this->getStateKeyPrefix() . $key;
        $session->remove($key);
        return true;
    }

    /**
     * Returns session key prefix, which is used to store internal states.
     * @return string session key prefix.
     */
    protected function getStateKeyPrefix()
    {
        return get_class($this) . '_';
    }

    /**
     * 生成一个指定长度的随机字符串
     * @param int $length
     */
    protected function generateRandomString($length = 32)
    {
        Yii::$app->security->generateRandomString();
    }
}